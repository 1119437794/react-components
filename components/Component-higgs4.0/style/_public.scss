/*
  @function position 针对position的left, right, top, bottom处理
  约定：值为-1表示无效值

  eg:
  @include position($top: $top, $bottom: $bottom, $left: $left, $right: $right);
*/
@mixin position($left, $right, $top, $bottom){

  @if($left != -1){ left: $left; }

  @if($right != -1){ right: $right; }

  @if($top != -1){ top: $top; }

  @if($bottom != -1){ bottom: $bottom; }
}

/*
  @function filled-circle 实心圆，可以用于新消息提醒红点
  @param [$top: 2px]      位置属性值
  @param [$right: 2px]
  @param [$size: 8px]     红点大小值
  @param [$bgColor: red]  背景颜色值

  eg:
  @include new-msg(
          $top: 20px,
          $right: 20px,
          $size: 20px
  );
*/
@mixin filled-circle($top: -1, $bottom: -1, $left: -1, $right: -1, $size: 8px, $bgColor: red){
  position: relative;

  &::after{
    position: absolute;
    content: '';
    border-radius: 50%;
    width: $size;
    height: $size;
    @include position($top: $top, $bottom: $bottom, $left: $left, $right: $right);
    background-color: $bgColor;
  }
}

/*
  @function triangle 绘制三角形
  @param $size      三角形宽
  @param $dir       三角形朝向
  @param $bgColor   三角形背景颜色

  eg:
  @include triangle(
    $left: 40px,
    $top: 20px,
    $size: 20px,
    $dir: bottom,
    $bgColor: red
  );
*/
@mixin triangle($top: -1, $bottom: -1, $left: -1, $right: -1, $size: 7px, $dir: bottom, $bgColor: #222){
  position: relative;

  &:after{
    position: absolute;
    content: '';
    width: 0;
    height: 0;
    @include position($top: $top, $bottom: $bottom, $left: $left, $right: $right);
    @if($dir == top) {
      border-bottom: #{$size} solid #{$bgColor};
      border-left: #{$size/2} solid transparent;
      border-right: #{$size/2} solid transparent;

    }@else if($dir == bottom){
      border-top: #{$size} solid #{$bgColor};
      border-left: #{$size/2} solid transparent;
      border-right: #{$size/2} solid transparent;

    }@else if($dir == left){
      border-right: #{$size} solid #{$bgColor};
      border-top: #{$size/2} solid transparent;
      border-bottom: #{$size/2} solid transparent;

    }@else if($dir == right){
      border-left: #{$size} solid #{$bgColor};
      border-top: #{$size/2} solid transparent;
      border-bottom: #{$size/2} solid transparent;

    }
  }
}

/*
  @function loading 加载loading
  @param $size          loading大小
  @param $loading-color loading颜色
*/
@mixin loading ($size: 25px, $loadingColor: #fff){

  // loading关键帧
  @-ms-keyframes load-frame { @include _load-animation($loadingColor); }
  @-moz-keyframes load-frame { @include _load-animation($loadingColor); }
  @-webkit-keyframes load-frame { @include _load-animation($loadingColor); }
  @keyframes load-frame { @include _load-animation($loadingColor); }

  // 调用loading关键帧
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, .3);

  &::after{
    position: absolute;
    content: "";
    left: 50%;
    top: 50%;
    width: $size;
    height: $size;
    border-radius: 50%;

    -ms-transform: translate(-50%, -50%);
    -moz-transform: translate(-50%, -50%);
    -webkit-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);

    -ms-animation: load-frame 1.1s infinite ease;
    -moz-animation: load-frame 1.1s infinite ease;
    -webkit-animation: load-frame 1.1s infinite ease;
    animation: load-frame 1.1s infinite ease;
  }
}
// 定义loading动画【不能在函数里面定义函数】
@mixin _load-animation ($color){

  $red: red($color);
  $green: green($color);
  $blue: blue($color);

  0%,
  100% {
    box-shadow: 0em -2.6em 0em 0em rgb($red, $green, $blue), 1.8em -1.8em 0 0em rgba($red, $green, $blue, 0.2), 2.5em 0em 0 0em rgba($red, $green, $blue, 0.2), 1.75em 1.75em 0 0em rgba($red, $green, $blue, 0.2), 0em 2.5em 0 0em rgba($red, $green, $blue, 0.2), -1.8em 1.8em 0 0em rgba($red, $green, $blue, 0.2), -2.6em 0em 0 0em rgba($red, $green, $blue, 0.5), -1.8em -1.8em 0 0em rgba($red, $green, $blue, 0.7);
  }
  12.5% {
    box-shadow: 0em -2.6em 0em 0em rgba($red, $green, $blue, 0.7), 1.8em -1.8em 0 0em rgb($red, $green, $blue), 2.5em 0em 0 0em rgba($red, $green, $blue, 0.2), 1.75em 1.75em 0 0em rgba($red, $green, $blue, 0.2), 0em 2.5em 0 0em rgba($red, $green, $blue, 0.2), -1.8em 1.8em 0 0em rgba($red, $green, $blue, 0.2), -2.6em 0em 0 0em rgba($red, $green, $blue, 0.2), -1.8em -1.8em 0 0em rgba($red, $green, $blue, 0.5);
  }
  25% {
    box-shadow: 0em -2.6em 0em 0em rgba($red, $green, $blue, 0.5), 1.8em -1.8em 0 0em rgba($red, $green, $blue, 0.7), 2.5em 0em 0 0em rgb($red, $green, $blue), 1.75em 1.75em 0 0em rgba($red, $green, $blue, 0.2), 0em 2.5em 0 0em rgba($red, $green, $blue, 0.2), -1.8em 1.8em 0 0em rgba($red, $green, $blue, 0.2), -2.6em 0em 0 0em rgba($red, $green, $blue, 0.2), -1.8em -1.8em 0 0em rgba($red, $green, $blue, 0.2);
  }
  37.5% {
    box-shadow: 0em -2.6em 0em 0em rgba($red, $green, $blue, 0.2), 1.8em -1.8em 0 0em rgba($red, $green, $blue, 0.5), 2.5em 0em 0 0em rgba($red, $green, $blue, 0.7), 1.75em 1.75em 0 0em rgba($red, $green, $blue, 0.2), 0em 2.5em 0 0em rgba($red, $green, $blue, 0.2), -1.8em 1.8em 0 0em rgba($red, $green, $blue, 0.2), -2.6em 0em 0 0em rgba($red, $green, $blue, 0.2), -1.8em -1.8em 0 0em rgba($red, $green, $blue, 0.2);
  }
  50% {
    box-shadow: 0em -2.6em 0em 0em rgba($red, $green, $blue, 0.2), 1.8em -1.8em 0 0em rgba($red, $green, $blue, 0.2), 2.5em 0em 0 0em rgba($red, $green, $blue, 0.5), 1.75em 1.75em 0 0em rgba($red, $green, $blue, 0.7), 0em 2.5em 0 0em rgb($red, $green, $blue), -1.8em 1.8em 0 0em rgba($red, $green, $blue, 0.2), -2.6em 0em 0 0em rgba($red, $green, $blue, 0.2), -1.8em -1.8em 0 0em rgba($red, $green, $blue, 0.2);
  }
  62.5% {
    box-shadow: 0em -2.6em 0em 0em rgba($red, $green, $blue, 0.2), 1.8em -1.8em 0 0em rgba($red, $green, $blue, 0.2), 2.5em 0em 0 0em rgba($red, $green, $blue, 0.2), 1.75em 1.75em 0 0em rgba($red, $green, $blue, 0.5), 0em 2.5em 0 0em rgba($red, $green, $blue, 0.7), -1.8em 1.8em 0 0em rgb($red, $green, $blue), -2.6em 0em 0 0em rgba($red, $green, $blue, 0.2), -1.8em -1.8em 0 0em rgba($red, $green, $blue, 0.2);
  }
  75% {
    box-shadow: 0em -2.6em 0em 0em rgba($red, $green, $blue, 0.2), 1.8em -1.8em 0 0em rgba($red, $green, $blue, 0.2), 2.5em 0em 0 0em rgba($red, $green, $blue, 0.2), 1.75em 1.75em 0 0em rgba($red, $green, $blue, 0.2), 0em 2.5em 0 0em rgba($red, $green, $blue, 0.5), -1.8em 1.8em 0 0em rgba($red, $green, $blue, 0.7), -2.6em 0em 0 0em rgb($red, $green, $blue), -1.8em -1.8em 0 0em rgba($red, $green, $blue, 0.2);
  }
  87.5% {
    box-shadow: 0em -2.6em 0em 0em rgba($red, $green, $blue, 0.2), 1.8em -1.8em 0 0em rgba($red, $green, $blue, 0.2), 2.5em 0em 0 0em rgba($red, $green, $blue, 0.2), 1.75em 1.75em 0 0em rgba($red, $green, $blue, 0.2), 0em 2.5em 0 0em rgba($red, $green, $blue, 0.2), -1.8em 1.8em 0 0em rgba($red, $green, $blue, 0.5), -2.6em 0em 0 0em rgba($red, $green, $blue, 0.7), -1.8em -1.8em 0 0em rgb($red, $green, $blue);
  }
}

/*
  @function btn 按钮或是色块
  @param $cursor 若是按钮的话，该值为pointer即可，否则采用默认样式
*/
@mixin btn($width: 10px, $height: 10px, $color: #fff, $bgColor: green, $borderRadius: 2px, $fontSize: 14px, $cursor: auto){
  display: inline-block;
  width: $width;
  height: $height;
  line-height: $height;
  border: none;
  outline: none;
  color: $color;
  cursor: $cursor;
  text-align: center;
  font-size: $fontSize;
  background-color: $bgColor;
  border-radius: $borderRadius;
}

/*
  @style ellipsis 单行溢出省略号
*/
%ellipsis{
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}
